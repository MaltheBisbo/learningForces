import numpy as np

from gaussComparator import gaussComparator
#from angular_fingerprintFeature import Angular_Fingerprint
from featureCalculators.angular_fingerprintFeature_cy import Angular_Fingerprint
from krr_ase import krr_class

from ase.io import read, write

atoms_train1 = read('global_initTrain.traj', index=':')
atoms_train2 = read('global_spTrain.traj', index=':')
atoms_train = atoms_train1 + atoms_train2
a0 = atoms_train[0]

Rc1 = 5
binwidth1 = 0.2
sigma1 = 0.2

Rc2 = 4
Nbins2 = 30
sigma2 = 0.2

gamma = 1
eta = 30
use_angular = True

featureCalculator = Angular_Fingerprint(a0, Rc1=Rc1, Rc2=Rc2, binwidth1=binwidth1, Nbins2=Nbins2, sigma1=sigma1, sigma2=sigma2, gamma=gamma, eta=eta, use_angular=use_angular)

# Set up KRR-model
comparator = gaussComparator()
krr = krr_class(comparator=comparator, featureCalculator=featureCalculator)

GSkwargs = {'reg': [1e-5], 'sigma': np.logspace(0,2,10)}
MAE, params = krr.train(atoms_train, add_new_data=False, k=10, **GSkwargs)
print(MAE)
